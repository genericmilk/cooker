<?php

namespace Genericmilk\Cooker\Cookers;

use Illuminate\Http\Request;
use App\Http\Requests;
use App\Http\Controllers\Controller;

class Less extends Controller
{
	private $format = 'css';
    
    public static function cook($job,$dev){
        $this->version = json_decode(file_get_contents(__DIR__.'/../composer.json'))->version;
        
        $o = config('cooker.build_stamps.css') ? "/* ".$job['output']." Generated by Cooker v".$this->version." by Genericmilk - Last build at ".Carbon::now()." */" : "";
        $o .= $this->obtainFrameworks('css');
        $o .= $this->less_libr();
        foreach($job['libraries'] as $loclib){
            $o .= file_get_contents(resource_path('less/'.$loclib));
        }
        $p = new Less_Parser();   
        foreach($job['input'] as $input){
            if(file_exists(resource_path('less/'.$input))){
                $p->parseFile(resource_path('less/'.$input));
            }else{
                $this->error(resource_path('less/'.$input).' missing. Unable to mix in this cook session');
            }

        }
        $o .= !$this->dev ? $this->minify_css($p->getCss()) : $p->getCss();

        file_put_contents(public_path('build/'.$job['output']),$o); // write o
    }
    private function less_libr(){
		// Global less libs (All common everywhere)
		try{
			$dir = scandir(resource_path('less/libraries'));
			unset($dir[0]);
			unset($dir[1]);
			if (($key = array_search('.DS_Store', $dir)) !== false) {
				unset($dir[$key]);
			}
			$dir = array_values($dir);
			$libs = '';
			foreach($dir as $lib){
				$libs .= $this->lastLineFormat(file_get_contents(resource_path('less/libraries/'.$lib)));
			}
			return $libs;
		}catch(\Exception $e){
			return null;
		}
	}
}